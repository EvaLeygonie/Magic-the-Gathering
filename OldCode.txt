//=== PROBLEMS ===//

//=== TRY TO LINK TO FILTERED SEARCH ===//

function getQueryParam (param) {
  const urlParams = new URLSearchParams(window.location.search)
  return urlParams.get(param)
}

const colorFilter = getQueryParam('color')
console.log(colorFilter)

if (colorFilter) {
  document.querySelector(`card_colors_filter-${colorFilter}`).checked = true
  applyFilter(colorFilter)
}

function applyFilter(color) {
  fetch(`https://api.magicthegathering.io/v1/cards?colors=${color}`)
      .then(response => response.json())
      .then(data => {
          displayCards(data.cards)
  })
}

BUTTON CHANGE URL

let typeButton = document.querySelectorAll('#magic_card_types a')
typeButton[0].href = 'favorites.html'
console.log(typeButton)

//=== COLOR FILTER ===//

const refinedCards = filteredCards.filter(card => {
      const cardColors = card.colors.sort()
      const selectedColors = cardColorFilter.sort()
      cardColors === selectedColors
    })




//=== AXIOS FUNCTIONS ===//

=== TYPE FILTER ===
 const cardTypeFilter = document.querySelector('select[id="card_type_filter"]').value
    async function filterCardType(type) {
      const result = (await axios.get(`https://api.magicthegathering.io/v1/cards?type=${type}`)).data
    }

=== NAME FILTER ===
const cardNameFilter = document.querySelector('#search_card').value
    async function filterCardName(name) {
      const result = (await axios.get(`https://api.magicthegathering.io/v1/cards?name=${name}`)).data
    }

=== COLOR FILTER ===
  let checkedColors = document.querySelectorAll("#card_colors_filter input[type='checkbox']:checked")
  let cardColorFilter = [...checkedColors].map(e => e.value)
    async function filterCardColor(colors) {
      const result = (await axios.get(`https://api.magicthegathering.io/v1/cards?colors=${colors}`)).data
    }

//=== MORE INFO CODE ===//
  const aEl = document.createElement("a")
      cardList.appendChild(aEl)
      aEl.href = 'https://api.magicthegathering.io/v1/cards?colors=' + color => CARD NAME
      aEl.textContent = "more info" => CARD NAME


//=== OLD SWITCH COLOR CODE ===///
      switch(input){
        case "Black": color = "B"
        break;
        case "Red": color= "R"
        break;
        case "Green": color = "G"
        break;
        case "Blue": color= "U"
        break;
        case "White": color= "W"
        break;
        default: color = ""
      }

       switch(color){
        case "B": color = "Black"
        break;
        case "R": color= "Red"
        break;
        case "G": color = "Green"
        break;
        case "U": color= "Blue"
        break;
        case "W": color= "White"
        break;
        default: color = ""
      }

//=== HOME PAGE BUTTONS ===//

<a href="cards.html?colors=B">
        <button id="black_color">Black cards</button>
      </a>
      <a href="cards.html?colors=R">
        <button id="red_color">Red cards</button>
      </a>
      <a href="cards.html?colors=G">
        <button id="green_color">Green cards</button>
      </a>
      <a href="cards.html?colors=U">
        <button id="blue_color">Blue cards</button>
      </a>
      <a href="cards.html?colors=W">
        <button id="white_color">White cards</button>
      </a>

CSS

#black_color {
  background-color: #1B1B1B;
}

#red_color {
  background-color: #E63946;
}

#green_color {
  background-color: #3A9D23;
}

#blue_color {
  background-color: #0078BF;
}

#white_color {
  background-color: #EDE6DB;
  color: #1B1B1B;
}
